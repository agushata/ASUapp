// Generated by view binder compiler. Do not edit!
package com.example.asuapp001.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.asuapp001.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSlideshowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Friday;

  @NonNull
  public final TextView Monday;

  @NonNull
  public final TextView Saturday;

  @NonNull
  public final TextView Thursday;

  @NonNull
  public final TextView Tuesday;

  @NonNull
  public final TextView Wednesday;

  @NonNull
  public final EditText editTextFriday;

  @NonNull
  public final EditText editTextMonday;

  @NonNull
  public final EditText editTextSaturday;

  @NonNull
  public final EditText editTextThursday;

  @NonNull
  public final EditText editTextTuesday;

  @NonNull
  public final EditText editTextWednesday;

  private FragmentSlideshowBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Friday,
      @NonNull TextView Monday, @NonNull TextView Saturday, @NonNull TextView Thursday,
      @NonNull TextView Tuesday, @NonNull TextView Wednesday, @NonNull EditText editTextFriday,
      @NonNull EditText editTextMonday, @NonNull EditText editTextSaturday,
      @NonNull EditText editTextThursday, @NonNull EditText editTextTuesday,
      @NonNull EditText editTextWednesday) {
    this.rootView = rootView;
    this.Friday = Friday;
    this.Monday = Monday;
    this.Saturday = Saturday;
    this.Thursday = Thursday;
    this.Tuesday = Tuesday;
    this.Wednesday = Wednesday;
    this.editTextFriday = editTextFriday;
    this.editTextMonday = editTextMonday;
    this.editTextSaturday = editTextSaturday;
    this.editTextThursday = editTextThursday;
    this.editTextTuesday = editTextTuesday;
    this.editTextWednesday = editTextWednesday;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSlideshowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSlideshowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_slideshow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSlideshowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Friday;
      TextView Friday = ViewBindings.findChildViewById(rootView, id);
      if (Friday == null) {
        break missingId;
      }

      id = R.id.Monday;
      TextView Monday = ViewBindings.findChildViewById(rootView, id);
      if (Monday == null) {
        break missingId;
      }

      id = R.id.Saturday;
      TextView Saturday = ViewBindings.findChildViewById(rootView, id);
      if (Saturday == null) {
        break missingId;
      }

      id = R.id.Thursday;
      TextView Thursday = ViewBindings.findChildViewById(rootView, id);
      if (Thursday == null) {
        break missingId;
      }

      id = R.id.Tuesday;
      TextView Tuesday = ViewBindings.findChildViewById(rootView, id);
      if (Tuesday == null) {
        break missingId;
      }

      id = R.id.Wednesday;
      TextView Wednesday = ViewBindings.findChildViewById(rootView, id);
      if (Wednesday == null) {
        break missingId;
      }

      id = R.id.editTextFriday;
      EditText editTextFriday = ViewBindings.findChildViewById(rootView, id);
      if (editTextFriday == null) {
        break missingId;
      }

      id = R.id.editTextMonday;
      EditText editTextMonday = ViewBindings.findChildViewById(rootView, id);
      if (editTextMonday == null) {
        break missingId;
      }

      id = R.id.editTextSaturday;
      EditText editTextSaturday = ViewBindings.findChildViewById(rootView, id);
      if (editTextSaturday == null) {
        break missingId;
      }

      id = R.id.editTextThursday;
      EditText editTextThursday = ViewBindings.findChildViewById(rootView, id);
      if (editTextThursday == null) {
        break missingId;
      }

      id = R.id.editTextTuesday;
      EditText editTextTuesday = ViewBindings.findChildViewById(rootView, id);
      if (editTextTuesday == null) {
        break missingId;
      }

      id = R.id.editTextWednesday;
      EditText editTextWednesday = ViewBindings.findChildViewById(rootView, id);
      if (editTextWednesday == null) {
        break missingId;
      }

      return new FragmentSlideshowBinding((ConstraintLayout) rootView, Friday, Monday, Saturday,
          Thursday, Tuesday, Wednesday, editTextFriday, editTextMonday, editTextSaturday,
          editTextThursday, editTextTuesday, editTextWednesday);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
